# snakemake --cluster "asking for ressources" --latency-wait 60 --cores 32 --jobs 50

LOTS_RNA=['BrCL1','BrCL2']
LOTS_MET=['BrCL1','LuCL']
METHODS_RNA_SUP=["DeconRNASeq", "nnls", "ols", "svr", "CIBERSORT", "elastic_net", "rlr", "WISP", "InstaPrism", "fardeep", "fardeep_sto"]
METHODS_RNA_UNSUP=["ICA", "NMF", "PREDE", "debCAM", "CDSeq"]
METHODS_MET_SUP=["rlr", "CIBERSORT", "houseman", "InstaPrism", "nnls"]
METHODS_MET_UNSUP=["RefFreeEWAS", "ICA", "EDec", "NMF", "debCAM", "MeDeCom"]
FS=["","toast","hvf"]
SIMS=['1','2','3']
DATE='231027'

rule all_rna_sup:
    input:
        expand("res/deconv/rna/sup/"+DATE+"/"+DATE+"_{lot}_Apred{fs}_{method}_sim{sim}.rds", lot=LOTS_RNA, method=METHODS_RNA_SUP, sim=SIMS, fs=FS)
        
rule all_rna_unsup:
    input:
        expand("res/deconv/rna/unsup/"+DATE+"/"+DATE+"_{lot}_Apred{fs}_{method}_sim{sim}.rds", lot=LOTS_RNA, method=METHODS_RNA_UNSUP, sim=SIMS, fs=FS)
        
rule all_met_sup:
    input:
        expand("res/deconv/met/sup/"+DATE+"/"+DATE+"_{lot}_Apred{fs}_{method}_sim{sim}.rds", lot=LOTS_MET, method=METHODS_MET_SUP, sim=SIMS, fs=FS)
        
rule all_met_unsup:
    input:
        expand("res/deconv/met/unsup/"+DATE+"/"+DATE+"_{lot}_Apred{fs}_{method}_sim{sim}.rds", lot=LOTS_MET, method=METHODS_MET_UNSUP, sim=SIMS, fs=FS)

rule deconv_rna_sup:
    input:
        script = 'scripts/1_deconv_rna_sup.R'
    params:
        lot = '{lot}',
        method = '{method}',
        sim = '{sim}',
        date = '{date}',
        fs = '{fs}'
    output:
        file_res = "res/deconv/rna/sup/{date}/{date}_{lot}_Apred{fs}_{method}_sim{sim}.rds",
        file_time = "res/timing/rna/sup/{date}/{date}_{lot}_timing{fs}_{method}_sim{sim}.rds",
    log: stdout="logs/rna_sup_{date}_{lot}_{method}_{sim}.log", stderr="logs/rna_sup_{date}_{lot}_{method}_{sim}.log"
    shell:
        "singularity exec ../container.sif Rscript {input.script} {params.lot} 'rna' {params.method} 'sup' {params.sim} {params.date} {params.fs} {output.file_res} {output.file_time} > {log.stdout} 2> {log.stderr}"

rule deconv_rna_unsup:
    input:
        script = 'scripts/1_deconv_rna_i,sup.R'
    params:
        lot = '{lot}',
        method = '{method}',
        sim = '{sim}',
        date = '{date}',
        fs = '{fs}'
    output:
        file_res = "res/deconv/rna/unsup/{date}/{date}_{lot}_Apred{fs}_{method}_sim{sim}.rds",
        file_time = "res/timing/rna/unsup/{date}/{date}_{lot}_timing{fs}_{method}_sim{sim}.rds",
    log: stdout="logs/rna_unsup_{date}_{lot}_{method}_{sim}.log", stderr="logs/rna_unsup_{date}_{lot}_{method}_{sim}.log"
    shell:
        "singularity exec ../container.sif Rscript {input.script} {params.lot} 'rna' {params.method} 'unsup' {params.sim} {params.date} {params.fs} {output.file_res} {output.file_time} > {log.stdout} 2> {log.stderr}"

rule deconv_met_sup:
    input:
        script = 'scripts/1_deconv_met_sup.R'
    params:
        lot = '{lot}',
        method = '{method}',
        sim = '{sim}',
        date = '{date}',
        fs = '{fs}'
    output:
        file_res = "res/deconv/met/sup/{date}/{date}_{lot}_Apred{fs}_{method}_sim{sim}.rds",
        file_time = "res/timing/met/sup/{date}/{date}_{lot}_timing{fs}_{method}_sim{sim}.rds",
    log: stdout="logs/met_sup_{date}_{lot}_{method}_{sim}.log", stderr="logs/met_sup_{date}_{lot}_{method}_{sim}.log"
    shell:
        "singularity exec ../container.sif Rscript {input.script} {params.lot} 'met' {params.method} 'sup' {params.sim} {params.date} {params.fs} {output.file_res} {output.file_time} > {log.stdout} 2> {log.stderr}"

rule deconv_met_unsup:
    input:
        script = 'scripts/1_deconv_met_unsup.R'
    params:
        lot = '{lot}',
        method = '{method}',
        sim = '{sim}',
        date = '{date}',
        fs = '{fs}'
    output:
        file_res = "res/deconv/met/unsup/{date}/{date}_{lot}_Apred{fs}_{method}_sim{sim}.rds",
        file_time = "res/timing/met/unsup/{date}/{date}_{lot}_timing{fs}_{method}_sim{sim}.rds",
    log: stdout="logs/met_unsup_{date}_{lot}_{method}_{sim}.log", stderr="logs/met_unsup_{date}_{lot}_{method}_{sim}.log"
    shell:
        "singularity exec ../container.sif Rscript {input.script} {params.lot} 'met' {params.method} 'unsup' {params.sim} {params.date} {params.fs} {output.file_res} {output.file_time} > {log.stdout} 2> {log.stderr}"
